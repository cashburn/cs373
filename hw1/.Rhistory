ggtitle(title) +
xlab("Data") +
ylab("Proportion")
source('~/Documents/stat350/lab3/lab3.R')
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
RandomData <- long
title <- "Long Tailed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
source('~/Documents/stat350/lab3/lab3.R')
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
RandomData <- left
title <- "Left Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
#Part D
n = 100
right <- rexp(n,rate=5)
left <- rbeta(n,7,0.8)
short <- runif(n,min=-3,max=3)
long <- rt(n,df=1)
RandomData <- right
title <- "Right Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
source('~/Documents/stat350/lab3/lab3.R')
title <- "100-Point Random Data Probability Plot"
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
#Part D
n = 100
right <- rexp(n,rate=5)
left <- rbeta(n,7,0.8)
short <- runif(n,min=-3,max=3)
long <- rt(n,df=1)
RandomData <- right
right
title <- "Right Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
source('~/Documents/stat350/lab3/lab3.R')
source('~/Documents/stat350/lab3/lab3.R')
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
RandomData <- left
left
title <- "Left Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
RandomData <- left
left
title <- "Left Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
RandomData <- short
short
title <- "Short Tailed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
RandomData <- long
long
title <- "Long Tailed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
#Part D
n = 100
right <- rexp(n,rate=5)
left <- rbeta(n,7,0.8)
short <- runif(n,min=-3,max=3)
long <- rt(n,df=1)
RandomData <- right
right
xbar = mean(RandomData)
s = sd(RandomData)
title <- "Right Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
RandomData <- left
left
xbar = mean(RandomData)
s = sd(RandomData)
title <- "Left Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
RandomData <- right
right
xbar = mean(RandomData)
s = sd(RandomData)
title <- "Right Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
#Part D
n = 100
right <- rexp(n,rate=5)
left <- rbeta(n,7,0.8)
short <- runif(n,min=-3,max=3)
long <- rt(n,df=1)
RandomData <- right
right
xbar = mean(RandomData)
s = sd(RandomData)
title <- "Right Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
#Part D
n = 100
right <- rexp(n,rate=5)
left <- rbeta(n,7,0.8)
short <- runif(n,min=-3,max=3)
long <- rt(n,df=1)
RandomData <- right
right
xbar = mean(RandomData)
s = sd(RandomData)
title <- "Right Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
RandomData <- left
left
xbar = mean(RandomData)
s = sd(RandomData)
title <- "Left Skewed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
RandomData <- short
short
xbar = mean(RandomData)
s = sd(RandomData)
title <- "Short Tailed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
RandomData <- long
long
xbar = mean(RandomData)
s = sd(RandomData)
title <- "Long Tailed Distribution"
ggplot(data.frame(RandomData=RandomData), aes(x=RandomData)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(RandomData))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(RandomData = RandomData), aes(sample = RandomData)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
USData_clean <- read.delim("~/Documents/stat350/USData_clean.txt")
View(USData_clean)
library(ggplot2)
read.table("USData_clean.txt", header = TRUE, sep = "\t")
read.table("USData_clean.txt", header = TRUE, sep = "\t")
Data <- USData_clean$AssaultsPerPopulation
Data <- USData_clean$AssaultsPerPopulation
xbar = mean(Data)
s = sd(Data)
title <- "Assaults per 100,000 people"
ggplot(data.frame(Data=Data), aes(x=Data)) +
geom_histogram(aes(y = ..density..),
bins=sqrt(length(Data))+2, fill="grey", col="black") +
geom_density(col="red", lwd=1) +
stat_function(fun=dnorm, args = list(mean = xbar, sd = s),
col = "blue", lwd = 1) +
ggtitle(title) +
xlab("Data") +
ylab("Proportion")
ggplot(data.frame(Data = Data), aes(sample = Data)) +
stat_qq() +
geom_abline(slope = s, intercept = xbar) +
ggtitle(title)
setwd("~/Documents/cs373/hw1/")
read.csv(file="yelp.csv", header = TRUE, quote = """, comment.char="")
read.csv(file="yelp.csv", header = TRUE, quote = """, comment.char="#")
read.csv(file="yelp.csv", header = TRUE, quote = "\"")
yelp <- read.csv(file="yelp.csv", header = TRUE, quote = "\"", comment.char = "")
View(yelp)
names()
names(yelp)
yelp <- read.csv(file="yelp.csv", header = TRUE, quote = "\"", comment.char = "")
names(yelp)
summary(yelp)
summary(yelp.noiseLevel)
summary(yelp$noiseLevel)
summary(yelp$stars)
hist(yelp$checkins)
summary(yelp)
summary(yelp$noiseLevel)
summary(yelp$stars)
hist(yelp$checkins, title = "Frequency of Check-Ins")
summary(yelp)
summary(yelp$noiseLevel)
summary(yelp$stars)
hist(yelp$checkins, main = "Frequency of Check-Ins")
summary(yelp)
summary(yelp$noiseLevel)
summary(yelp$stars)
jpeg('foo.jpg')
hist(yelp$checkins, main = "Frequency of Check-Ins")
dev.off()
hist(log(yelp$checkins), main = "Logged Frequency of Check-Ins")
yelp$recommendedFor[0]
yelp$recommendedFor[c(0)]
yelp$recommendedFor[c(1)]
yelp$recommendedFor[3]
yelp$recommendedFor[10]
grepl("dinner", yelp$recommendedFor[10])
grepl("dinner", yelp$recommendedFor[9])
grepl("dinner", yelp$recommendedFor[8])
cbind(yelp, grepl("dinner", yelp$recommendedFor))
yelp2 <- cbind(yelp, grepl("dinner", yelp$recommendedFor))
View(yelp2)
yelp2 <- cbind(yelp, grepl("dinner", goodForDinner=yelp$recommendedFor))
yelp2 <- cbind(yelp, goodForDinner=grepl("dinner", yelp$recommendedFor))
yelp2 <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
yelp <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
quantile(yelp$reviewCount)
yelp$reviewCount[yelp$reviewCount <= 8]
quantile(yelp$reviewCount)[1]
quantile(yelp$reviewCount)[2]
yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]]
quantile(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
#Part 5
yelp <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
summary()
printf("Review Count Original/Modified")
quantile(yelp$reviewCount)
quantile(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
print("Review Count")
#Part 5
yelp <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
summary()
print("Review Count Original/Modified")
quantile(yelp$reviewCount)
quantile(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
quantile(yelp$reviewCount, names=TRUE)
quantile(yelp$reviewCount, names=FALSE)
print("Hello there", quote = FALSE)
print("Hello there", quote = FALSE, max = 0)
print("0%  25%  50%  75% 100%", quote = FALSE)
quantile(yelp$reviewCount, names=FALSE)
print("    0%  25%  50%  75% 100%", quote = FALSE)
quantile(yelp$reviewCount, names=FALSE)
print("   0%  25%  50%  75% 100%", quote = FALSE)
quantile(yelp$reviewCount, names=FALSE)
print("butts")
#Part 5
yelp <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
summary()
print("Review Count Original/Modified", names = FALSE)
quantile(yelp$reviewCount)
quantile(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
#Part 5
yelp <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
summary()
print("Review Count Original/Modified", quotes = FALSE)
quantile(yelp$reviewCount)
quantile(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]], names = FALSE)
pairs(yelp$stars)
pairs(yelp$stars, yelp$reviewCount, yelp$checkins, yelp$longitude, yelp$latitude)
pairs(yelp$stars, yelp$reviewCount)
names(yelp)
pairs(c(8, 9, 10, 7, 6), yelp)
pairs(~stars+reviewCount+checkins+longitude+latitude, data=yelp)
quantile(yelp$attire)
#Part 5
yelp <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
summary()
print("Review Count Original/Modified", quotes = FALSE)
quantile(yelp$reviewCount)
quantile(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
print("Stars Original/Modified", quotes = FALSE)
quantile(yelp$stars)
quantile(yelp$stars[yelp$stars <= quantile(yelp$stars)[2]])
print("Attire Original/Modified", quotes = FALSE)
quantile(yelp$attire)
quantile(yelp$attire[yelp$attire <= quantile(yelp$attire)[2]])
print("Price Range Original/Modified", quotes = FALSE)
quantile(yelp$priceRange)
quantile(yelp$priceRange[yelp$priceRange <= quantile(yelp$priceRange)[2]])
summary(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
yelp <- read.csv(file="yelp.csv", header = TRUE, quote = "\"", comment.char = "")
names(yelp)
summary(yelp)
summary(yelp$noiseLevel)
summary(yelp$stars)
jpeg('foo.jpg')
hist(yelp$checkins, main = "Frequency of Check-Ins")
dev.off()
hist(log(yelp$checkins), main = "Logged Frequency of Check-Ins")
#Part 5
yelp <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
summary()
#Part 5
yelp <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
summary(yelp$isAmerican)
summary(yelp$goodForDinner)
print("Review Count Original/Modified", quotes = FALSE)
quantile(yelp$reviewCount)
quantile(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$stars[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$attire[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$priceRange[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$delivery[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$goodForKids[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
yelp <- read.csv(file="yelp.csv", header = TRUE, quote = "\"", comment.char = "")
names(yelp)
summary(yelp)
summary(yelp$noiseLevel)
summary(yelp$stars)
yelp <- read.csv(file="yelp.csv", header = TRUE, quote = "\"", comment.char = "")
names(yelp)
summary(yelp)
summary(yelp$noiseLevel)
summary(yelp$stars)
yelp <- read.csv(file="yelp.csv", header = TRUE, quote = "\"", comment.char = "")
names(yelp)
summary(yelp)
summary(yelp$noiseLevel)
summary(yelp$stars)
jpeg('foo.jpg')
hist(yelp$checkins, main = "Frequency of Check-Ins")
dev.off()
hist(log(yelp$checkins), main = "Logged Frequency of Check-Ins")
#Part 5
yelp <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
summary(yelp$isAmerican)
summary(yelp$goodForDinner)
#Part 5
yelp <- cbind(yelp, isAmerican=grepl("American", yelp$categories), goodForDinner=grepl("dinner", yelp$recommendedFor))
summary(yelp$isAmerican)
summary(yelp$goodForDinner)
print("Review Count Original/Modified", quotes = FALSE)
quantile(yelp$reviewCount)
quantile(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$reviewCount[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$stars[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$attire[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$priceRange[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$delivery[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
summary(yelp$goodForKids[yelp$reviewCount <= quantile(yelp$reviewCount)[2]])
cor(yelp$reviewCount, yelp$checkins)
cor(yelp[,c("checkins", "reviewCount", "longitude", "latitude")])
cor(yelp)
cor(yelp[])
cor(yelp[,])
cor(yelp[,c("alcohol","noiseLevel")])
boxplot(yelp[,c("alcohol","noiseLevel")])
boxplot(yelp$alcohol, yelp$noiseLevel)
boxplot(alcohol~noiselevel, data=yelp)
boxplot(pricerange~checkins, data=yelp)
cor(pricerange~checkins, data=yelp)
cor(pricerange+checkins, data=yelp)
plot(yelp$checkins, yelp$priceRange)
plot(yelp$priceRange, yelp$checkins)
